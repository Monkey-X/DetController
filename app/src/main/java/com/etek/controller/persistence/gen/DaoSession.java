package com.etek.controller.persistence.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.etek.controller.dto.ProjectDownLoadEntity;
import com.etek.controller.yunnan.enetity.YunnanAuthBobmEntity;
import com.etek.controller.persistence.entity.ChkControllerEntity;
import com.etek.controller.persistence.entity.ReportEntity;
import com.etek.controller.persistence.entity.ProjectInfoEntity;
import com.etek.controller.persistence.entity.DetReportEntity;
import com.etek.controller.persistence.entity.ChkDetonatorEntity;
import com.etek.controller.persistence.entity.ProjectDetonator;
import com.etek.controller.persistence.entity.PendingProject;
import com.etek.controller.persistence.entity.ForbiddenZoneEntity;
import com.etek.controller.persistence.entity.SingleCheckEntity;
import com.etek.controller.persistence.entity.RptDetonatorEntity;
import com.etek.controller.persistence.entity.PermissibleZoneEntity;
import com.etek.controller.persistence.entity.ControllerEntity;
import com.etek.controller.persistence.entity.DetonatorEntity;

import com.etek.controller.persistence.gen.ProjectDownLoadEntityDao;
import com.etek.controller.persistence.gen.YunnanAuthBobmEntityDao;
import com.etek.controller.persistence.gen.ChkControllerEntityDao;
import com.etek.controller.persistence.gen.ReportEntityDao;
import com.etek.controller.persistence.gen.ProjectInfoEntityDao;
import com.etek.controller.persistence.gen.DetReportEntityDao;
import com.etek.controller.persistence.gen.ChkDetonatorEntityDao;
import com.etek.controller.persistence.gen.ProjectDetonatorDao;
import com.etek.controller.persistence.gen.PendingProjectDao;
import com.etek.controller.persistence.gen.ForbiddenZoneEntityDao;
import com.etek.controller.persistence.gen.SingleCheckEntityDao;
import com.etek.controller.persistence.gen.RptDetonatorEntityDao;
import com.etek.controller.persistence.gen.PermissibleZoneEntityDao;
import com.etek.controller.persistence.gen.ControllerEntityDao;
import com.etek.controller.persistence.gen.DetonatorEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig projectDownLoadEntityDaoConfig;
    private final DaoConfig yunnanAuthBobmEntityDaoConfig;
    private final DaoConfig chkControllerEntityDaoConfig;
    private final DaoConfig reportEntityDaoConfig;
    private final DaoConfig projectInfoEntityDaoConfig;
    private final DaoConfig detReportEntityDaoConfig;
    private final DaoConfig chkDetonatorEntityDaoConfig;
    private final DaoConfig projectDetonatorDaoConfig;
    private final DaoConfig pendingProjectDaoConfig;
    private final DaoConfig forbiddenZoneEntityDaoConfig;
    private final DaoConfig singleCheckEntityDaoConfig;
    private final DaoConfig rptDetonatorEntityDaoConfig;
    private final DaoConfig permissibleZoneEntityDaoConfig;
    private final DaoConfig controllerEntityDaoConfig;
    private final DaoConfig detonatorEntityDaoConfig;

    private final ProjectDownLoadEntityDao projectDownLoadEntityDao;
    private final YunnanAuthBobmEntityDao yunnanAuthBobmEntityDao;
    private final ChkControllerEntityDao chkControllerEntityDao;
    private final ReportEntityDao reportEntityDao;
    private final ProjectInfoEntityDao projectInfoEntityDao;
    private final DetReportEntityDao detReportEntityDao;
    private final ChkDetonatorEntityDao chkDetonatorEntityDao;
    private final ProjectDetonatorDao projectDetonatorDao;
    private final PendingProjectDao pendingProjectDao;
    private final ForbiddenZoneEntityDao forbiddenZoneEntityDao;
    private final SingleCheckEntityDao singleCheckEntityDao;
    private final RptDetonatorEntityDao rptDetonatorEntityDao;
    private final PermissibleZoneEntityDao permissibleZoneEntityDao;
    private final ControllerEntityDao controllerEntityDao;
    private final DetonatorEntityDao detonatorEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        projectDownLoadEntityDaoConfig = daoConfigMap.get(ProjectDownLoadEntityDao.class).clone();
        projectDownLoadEntityDaoConfig.initIdentityScope(type);

        yunnanAuthBobmEntityDaoConfig = daoConfigMap.get(YunnanAuthBobmEntityDao.class).clone();
        yunnanAuthBobmEntityDaoConfig.initIdentityScope(type);

        chkControllerEntityDaoConfig = daoConfigMap.get(ChkControllerEntityDao.class).clone();
        chkControllerEntityDaoConfig.initIdentityScope(type);

        reportEntityDaoConfig = daoConfigMap.get(ReportEntityDao.class).clone();
        reportEntityDaoConfig.initIdentityScope(type);

        projectInfoEntityDaoConfig = daoConfigMap.get(ProjectInfoEntityDao.class).clone();
        projectInfoEntityDaoConfig.initIdentityScope(type);

        detReportEntityDaoConfig = daoConfigMap.get(DetReportEntityDao.class).clone();
        detReportEntityDaoConfig.initIdentityScope(type);

        chkDetonatorEntityDaoConfig = daoConfigMap.get(ChkDetonatorEntityDao.class).clone();
        chkDetonatorEntityDaoConfig.initIdentityScope(type);

        projectDetonatorDaoConfig = daoConfigMap.get(ProjectDetonatorDao.class).clone();
        projectDetonatorDaoConfig.initIdentityScope(type);

        pendingProjectDaoConfig = daoConfigMap.get(PendingProjectDao.class).clone();
        pendingProjectDaoConfig.initIdentityScope(type);

        forbiddenZoneEntityDaoConfig = daoConfigMap.get(ForbiddenZoneEntityDao.class).clone();
        forbiddenZoneEntityDaoConfig.initIdentityScope(type);

        singleCheckEntityDaoConfig = daoConfigMap.get(SingleCheckEntityDao.class).clone();
        singleCheckEntityDaoConfig.initIdentityScope(type);

        rptDetonatorEntityDaoConfig = daoConfigMap.get(RptDetonatorEntityDao.class).clone();
        rptDetonatorEntityDaoConfig.initIdentityScope(type);

        permissibleZoneEntityDaoConfig = daoConfigMap.get(PermissibleZoneEntityDao.class).clone();
        permissibleZoneEntityDaoConfig.initIdentityScope(type);

        controllerEntityDaoConfig = daoConfigMap.get(ControllerEntityDao.class).clone();
        controllerEntityDaoConfig.initIdentityScope(type);

        detonatorEntityDaoConfig = daoConfigMap.get(DetonatorEntityDao.class).clone();
        detonatorEntityDaoConfig.initIdentityScope(type);

        projectDownLoadEntityDao = new ProjectDownLoadEntityDao(projectDownLoadEntityDaoConfig, this);
        yunnanAuthBobmEntityDao = new YunnanAuthBobmEntityDao(yunnanAuthBobmEntityDaoConfig, this);
        chkControllerEntityDao = new ChkControllerEntityDao(chkControllerEntityDaoConfig, this);
        reportEntityDao = new ReportEntityDao(reportEntityDaoConfig, this);
        projectInfoEntityDao = new ProjectInfoEntityDao(projectInfoEntityDaoConfig, this);
        detReportEntityDao = new DetReportEntityDao(detReportEntityDaoConfig, this);
        chkDetonatorEntityDao = new ChkDetonatorEntityDao(chkDetonatorEntityDaoConfig, this);
        projectDetonatorDao = new ProjectDetonatorDao(projectDetonatorDaoConfig, this);
        pendingProjectDao = new PendingProjectDao(pendingProjectDaoConfig, this);
        forbiddenZoneEntityDao = new ForbiddenZoneEntityDao(forbiddenZoneEntityDaoConfig, this);
        singleCheckEntityDao = new SingleCheckEntityDao(singleCheckEntityDaoConfig, this);
        rptDetonatorEntityDao = new RptDetonatorEntityDao(rptDetonatorEntityDaoConfig, this);
        permissibleZoneEntityDao = new PermissibleZoneEntityDao(permissibleZoneEntityDaoConfig, this);
        controllerEntityDao = new ControllerEntityDao(controllerEntityDaoConfig, this);
        detonatorEntityDao = new DetonatorEntityDao(detonatorEntityDaoConfig, this);

        registerDao(ProjectDownLoadEntity.class, projectDownLoadEntityDao);
        registerDao(YunnanAuthBobmEntity.class, yunnanAuthBobmEntityDao);
        registerDao(ChkControllerEntity.class, chkControllerEntityDao);
        registerDao(ReportEntity.class, reportEntityDao);
        registerDao(ProjectInfoEntity.class, projectInfoEntityDao);
        registerDao(DetReportEntity.class, detReportEntityDao);
        registerDao(ChkDetonatorEntity.class, chkDetonatorEntityDao);
        registerDao(ProjectDetonator.class, projectDetonatorDao);
        registerDao(PendingProject.class, pendingProjectDao);
        registerDao(ForbiddenZoneEntity.class, forbiddenZoneEntityDao);
        registerDao(SingleCheckEntity.class, singleCheckEntityDao);
        registerDao(RptDetonatorEntity.class, rptDetonatorEntityDao);
        registerDao(PermissibleZoneEntity.class, permissibleZoneEntityDao);
        registerDao(ControllerEntity.class, controllerEntityDao);
        registerDao(DetonatorEntity.class, detonatorEntityDao);
    }
    
    public void clear() {
        projectDownLoadEntityDaoConfig.clearIdentityScope();
        yunnanAuthBobmEntityDaoConfig.clearIdentityScope();
        chkControllerEntityDaoConfig.clearIdentityScope();
        reportEntityDaoConfig.clearIdentityScope();
        projectInfoEntityDaoConfig.clearIdentityScope();
        detReportEntityDaoConfig.clearIdentityScope();
        chkDetonatorEntityDaoConfig.clearIdentityScope();
        projectDetonatorDaoConfig.clearIdentityScope();
        pendingProjectDaoConfig.clearIdentityScope();
        forbiddenZoneEntityDaoConfig.clearIdentityScope();
        singleCheckEntityDaoConfig.clearIdentityScope();
        rptDetonatorEntityDaoConfig.clearIdentityScope();
        permissibleZoneEntityDaoConfig.clearIdentityScope();
        controllerEntityDaoConfig.clearIdentityScope();
        detonatorEntityDaoConfig.clearIdentityScope();
    }

    public ProjectDownLoadEntityDao getProjectDownLoadEntityDao() {
        return projectDownLoadEntityDao;
    }

    public YunnanAuthBobmEntityDao getYunnanAuthBobmEntityDao() {
        return yunnanAuthBobmEntityDao;
    }

    public ChkControllerEntityDao getChkControllerEntityDao() {
        return chkControllerEntityDao;
    }

    public ReportEntityDao getReportEntityDao() {
        return reportEntityDao;
    }

    public ProjectInfoEntityDao getProjectInfoEntityDao() {
        return projectInfoEntityDao;
    }

    public DetReportEntityDao getDetReportEntityDao() {
        return detReportEntityDao;
    }

    public ChkDetonatorEntityDao getChkDetonatorEntityDao() {
        return chkDetonatorEntityDao;
    }

    public ProjectDetonatorDao getProjectDetonatorDao() {
        return projectDetonatorDao;
    }

    public PendingProjectDao getPendingProjectDao() {
        return pendingProjectDao;
    }

    public ForbiddenZoneEntityDao getForbiddenZoneEntityDao() {
        return forbiddenZoneEntityDao;
    }

    public SingleCheckEntityDao getSingleCheckEntityDao() {
        return singleCheckEntityDao;
    }

    public RptDetonatorEntityDao getRptDetonatorEntityDao() {
        return rptDetonatorEntityDao;
    }

    public PermissibleZoneEntityDao getPermissibleZoneEntityDao() {
        return permissibleZoneEntityDao;
    }

    public ControllerEntityDao getControllerEntityDao() {
        return controllerEntityDao;
    }

    public DetonatorEntityDao getDetonatorEntityDao() {
        return detonatorEntityDao;
    }

}
